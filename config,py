from sqlalchemy import ForeignKey, create_engine, Column, Integer, String, DateTime, Text
from sqlalchemy.orm import declarative_base
from datetime import datetime
# for postgreSQL database credentials can be written as 
user = 'postgres'
password = 'postgres'
host = 'localhost'
port = '5432'
database = 'postgres'
# for creating connection string
url = f"postgresql://{user}:{password}@{host}:{port}/{database}"
# SQLAlchemy engine
engine = create_engine(url)
# you can test if the connection is made or not
try:
    with engine.connect() as url:
        print('Successfully connected to the PostgreSQL database')
except Exception as ex:
    print(f'Sorry failed to connect: {ex}')

Base = declarative_base()

class First(Base):
    __tablename__ = 'first'
    id = Column(Integer(), primary_key=True)
    slug = Column(String(100), nullable=False, unique=True)
    title = Column(String(100), nullable=False)
    created_on = Column(DateTime(), default=datetime.now)
    updated_on = Column(DateTime(), default=datetime.now, onupdate=datetime.now)
    content = Column(Text)
    author_id = Column(Integer(), ForeignKey('first.id'))


from sqlalchemy.orm import relationship, backref

class Second(Base):
    __tablename__ = 'second'

    id = Column(Integer(), primary_key=True)
    firstname = Column(String(100))
    lastname = Column(String(100))
    email = Column(String(255), nullable=False)
    joined = Column(DateTime(), default=datetime.now)

    articles = relationship('First', backref='first')

Base.metadata.create_all(engine)